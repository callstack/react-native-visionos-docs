"use strict";(self.webpackChunkreact_native_visionos_docs=self.webpackChunkreact_native_visionos_docs||[]).push([[242],{825:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var o=t(4848),i=t(8453);const r={},s="Ornaments",a={id:"docs/guides/ornaments",title:"Ornaments",description:"In order to use ornaments in your app, you need to declare them in your App.swift file.",source:"@site/docs/docs/guides/ornaments.md",sourceDirName:"docs/guides",slug:"/docs/guides/ornaments",permalink:"/react-native-visionos-docs/docs/guides/ornaments",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Immersive Spaces",permalink:"/react-native-visionos-docs/docs/guides/immersive-spaces"}},c={},d=[{value:"Moving DevMenu ornament",id:"moving-devmenu-ornament",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"ornaments",children:"Ornaments"}),"\n",(0,o.jsxs)(n.p,{children:["In order to use ornaments in your app, you need to declare them in your ",(0,o.jsx)(n.code,{children:"App.swift"})," file."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-swift",metastring:'title="App.swift"',children:'struct MainApp: App {\n  @UIApplicationDelegateAdaptor var delegate: AppDelegate\n  \n  var body: some Scene {\n    RCTMainWindow(moduleName: "App") { rootView in\n// highlight-start\n      rootView.ornament(attachmentAnchor: .scene(.bottom)) {\n        VStack {\n          Button("1") {}\n          Button("2") {}\n        }\n      }\n// highlight-end\n    }\n  }\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["This API allows you to ",(0,o.jsx)(n.strong,{children:"attach any additional SwiftUI modifier"})," to the root view of your app. In this example, we attach a ",(0,o.jsx)(n.code,{children:"VStack"})," with two buttons to the bottom of the scene. You can also use React Native views for the ornament. Follow the ",(0,o.jsx)(n.a,{href:"/api/window-manager",children:"Window Manager API"})," to learn more about how to use React Native views in SwiftUI."]}),"\n",(0,o.jsxs)(n.p,{children:["For more information about the ",(0,o.jsx)(n.code,{children:"ornament"})," API, refer to the ",(0,o.jsx)(n.a,{href:"https://developer.apple.com/documentation/SwiftUI/View/ornament(visibility:attachmentAnchor:contentAlignment:ornament:)",children:"Apple documentation"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"moving-devmenu-ornament",children:"Moving DevMenu ornament"}),"\n",(0,o.jsxs)(n.p,{children:["The DevMenu ornament can be moved to a different position in the app if it conflicts with your custom ornament. You can use the ",(0,o.jsx)(n.code,{children:"devMenuSceneAnchor"})," parameter in the ",(0,o.jsx)(n.code,{children:"RCTMainWindow"})," initializer to specify the position of the DevMenu."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-swift",metastring:'title="App.swift"',children:'struct MainApp: App {\n  @UIApplicationDelegateAdaptor var delegate: AppDelegate\n  \n  var body: some Scene {\n// highlight-start\n    RCTMainWindow(moduleName: "App", devMenuSceneAnchor: .top) { rootView in\n// highlight-end\n      // ...\n    }\n  }\n}\n'})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(6540);const i={},r=o.createContext(i);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);